syntax = "proto3";

package cosmos.symstaking.v1;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/symstaking/v1/params.proto";
import "cosmos/symstaking/v1/staking.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/symstaking/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/cosmos/symstaking/v1/params";
  }

  // CurrentEpoch Queries a list of CurrentEpoch items.
  rpc CurrentEpoch(QueryCurrentEpochRequest) returns (QueryCurrentEpochResponse) {
    option (google.api.http).get = "/cosmos/symstaking/v1/current_epoch";
  }

  // CurrentEpoch Queries a list of CurrentEpoch items.
  rpc LastValidatorSet(QueryLastValidatorSetRequest) returns (QueryLastValidatorSetResponse) {
    option (google.api.http).get = "/cosmos/symstaking/v1/last_valset";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// QueryCurrentEpochRequest defines the QueryCurrentEpochRequest message.
message QueryCurrentEpochRequest {}

// QueryCurrentEpochResponse defines the QueryCurrentEpochResponse message.
message QueryCurrentEpochResponse {
  uint64 epoch = 1 [(amino.dont_omitempty) = true];
}

// QueryCurrentEpochRequest defines the QueryCurrentEpochRequest message.
message QueryLastValidatorSetRequest {}

// QueryCurrentEpochResponse defines the QueryCurrentEpochResponse message.
message QueryLastValidatorSetResponse {
  LastValidatorSet last_validator_set = 1;
}